{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "启动MCP服务器",
      "type": "shell",
      "command": "node",
      "args": [
        "index.js"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "problemMatcher": [],
      "runOptions": {
        "runOn": "default"
      }
    },
    {
      "label": "watch模式启动MCP服务器",
      "type": "shell",
      "command": "node",
      "args": [
        "--watch",
        "index.js"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "isBackground": true,
      "problemMatcher": {
        "owner": "node",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        },
        "background": {
          "activeOnStart": true,
          "beginsPattern": "^.*小六壬 MCP 服务器.*$",
          "endsPattern": "^.*已启动.*$"
        }
      },
      "runOptions": {
        "runOn": "default"
      }
    },
    {
      "label": "测试MCP服务器",
      "type": "shell",
      "command": "node",
      "args": [
        "-e",
        "console.log('测试MCP服务器连接...'); import('./index.js').then(() => console.log('服务器启动成功')).catch(e => console.error('服务器启动失败:', e))"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new"
      },
      "problemMatcher": []
    }
  ]
}